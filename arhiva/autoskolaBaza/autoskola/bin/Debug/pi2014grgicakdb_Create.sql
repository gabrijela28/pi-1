/*
Deployment script for autoskola

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "autoskola"
:setvar DefaultFilePrefix "autoskola"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)] COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[ispit]...';


GO
CREATE TABLE [dbo].[ispit] (
    [ID_ispit] INT           NOT NULL,
    [ID_grupa] INT           NOT NULL,
    [datum]    TIMESTAMP     NOT NULL,
    [napomena] VARCHAR (300) NULL,
    [trajanje] TIME (7)      NULL,
    PRIMARY KEY CLUSTERED ([ID_ispit] ASC)
);


GO
PRINT N'Creating [dbo].[korisnik_grupa]...';


GO
CREATE TABLE [dbo].[korisnik_grupa] (
    [ID_grupa]    INT NOT NULL,
    [ID_korisnik] INT NOT NULL
);


GO
PRINT N'Creating [dbo].[korisnik_dogadjaj]...';


GO
CREATE TABLE [dbo].[korisnik_dogadjaj] (
    [ID_dogadjaj] INT NOT NULL,
    [ID_korisnik] INT NOT NULL,
    [dolazak]     BIT NOT NULL
);


GO
PRINT N'Creating [dbo].[korisnik]...';


GO
CREATE TABLE [dbo].[korisnik] (
    [ID_korisnik]    INT          NOT NULL,
    [ime]            VARCHAR (30) NOT NULL,
    [prezime]        VARCHAR (30) NOT NULL,
    [korisnicko_ime] VARCHAR (30) NOT NULL,
    [lozinka]        VARCHAR (30) NOT NULL,
    [oib]            VARCHAR (30) NOT NULL,
    [mail]           VARCHAR (30) NULL,
    [telefon]        VARCHAR (30) NULL,
    [ID_korisnikTip] INT          NOT NULL,
    CONSTRAINT [ID_korisnik] PRIMARY KEY CLUSTERED ([ID_korisnik] ASC)
);


GO
PRINT N'Creating [dbo].[korisnikTip]...';


GO
CREATE TABLE [dbo].[korisnikTip] (
    [ID_korisnikTip] INT          NOT NULL,
    [naziv]          VARCHAR (30) NOT NULL,
    PRIMARY KEY CLUSTERED ([ID_korisnikTip] ASC)
);


GO
PRINT N'Creating [dbo].[pitanja]...';


GO
CREATE TABLE [dbo].[pitanja] (
    [ID_pitanja] INT           NOT NULL,
    [ID_cjelina] INT           NOT NULL,
    [tekst]      VARCHAR (100) NOT NULL,
    [srcPitanja] VARCHAR (50)  NULL,
    [bodovi]     FLOAT (53)    NOT NULL,
    PRIMARY KEY CLUSTERED ([ID_pitanja] ASC)
);


GO
PRINT N'Creating [dbo].[grupa]...';


GO
CREATE TABLE [dbo].[grupa] (
    [ID_grupa]   INT NOT NULL,
    [ID_cjelina] INT NOT NULL,
    [predavac]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([ID_grupa] ASC)
);


GO
PRINT N'Creating [dbo].[materijal]...';


GO
CREATE TABLE [dbo].[materijal] (
    [ID_materijal] INT           NOT NULL,
    [ID_cjelina]   INT           NOT NULL,
    [opis]         VARCHAR (150) NULL,
    [srcMaterijal] VARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([ID_materijal] ASC)
);


GO
PRINT N'Creating [dbo].[cjelina]...';


GO
CREATE TABLE [dbo].[cjelina] (
    [ID_cjelina] INT           NOT NULL,
    [ID_predmet] INT           NOT NULL,
    [naziv]      VARCHAR (30)  NOT NULL,
    [opis]       VARCHAR (200) NULL,
    [bodovi]     FLOAT (53)    NOT NULL,
    PRIMARY KEY CLUSTERED ([ID_cjelina] ASC)
);


GO
PRINT N'Creating [dbo].[predmet]...';


GO
CREATE TABLE [dbo].[predmet] (
    [ID_predmet] INT           NOT NULL,
    [naziv]      VARCHAR (30)  NOT NULL,
    [opis]       VARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([ID_predmet] ASC)
);


GO
PRINT N'Creating [dbo].[korisnik_ispit]...';


GO
CREATE TABLE [dbo].[korisnik_ispit] (
    [ID_korisnik_ispit] INT NOT NULL,
    [ID_korisnik]       INT NOT NULL,
    [ID_ispit]          INT NOT NULL,
    PRIMARY KEY CLUSTERED ([ID_korisnik_ispit] ASC)
);


GO
PRINT N'Creating [dbo].[odgovor]...';


GO
CREATE TABLE [dbo].[odgovor] (
    [ID_odgovor] INT          NOT NULL,
    [ID_pitanja] INT          NOT NULL,
    [tekst]      VARCHAR (50) NOT NULL,
    [tocno]      BIT          NOT NULL,
    [srcOdgovor] VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([ID_odgovor] ASC)
);


GO
PRINT N'Creating [dbo].[odgovor_ispit]...';


GO
CREATE TABLE [dbo].[odgovor_ispit] (
    [ID_korisnik_ispit] INT NOT NULL,
    [ID_odgovor]        INT NOT NULL
);


GO
PRINT N'Creating [dbo].[dogadjaj]...';


GO
CREATE TABLE [dbo].[dogadjaj] (
    [ID_dogadjaj] INT           NOT NULL,
    [kreirao]     INT           NOT NULL,
    [napomena]    VARCHAR (300) NOT NULL,
    [datum]       TIMESTAMP     NOT NULL,
    PRIMARY KEY CLUSTERED ([ID_dogadjaj] ASC)
);


GO
PRINT N'Creating Default Constraint on [dbo].[cjelina]....';


GO
ALTER TABLE [dbo].[cjelina]
    ADD DEFAULT 100 FOR [bodovi];


GO
PRINT N'Creating Foreign Key on [dbo].[ispit]....';


GO
ALTER TABLE [dbo].[ispit]
    ADD FOREIGN KEY ([ID_grupa]) REFERENCES [dbo].[grupa] ([ID_grupa]);


GO
PRINT N'Creating Foreign Key on [dbo].[korisnik_grupa]....';


GO
ALTER TABLE [dbo].[korisnik_grupa]
    ADD FOREIGN KEY ([ID_korisnik]) REFERENCES [dbo].[korisnik] ([ID_korisnik]);


GO
PRINT N'Creating Foreign Key on [dbo].[korisnik_grupa]....';


GO
ALTER TABLE [dbo].[korisnik_grupa]
    ADD FOREIGN KEY ([ID_grupa]) REFERENCES [dbo].[grupa] ([ID_grupa]);


GO
PRINT N'Creating Foreign Key on [dbo].[korisnik_dogadjaj]....';


GO
ALTER TABLE [dbo].[korisnik_dogadjaj]
    ADD FOREIGN KEY ([ID_dogadjaj]) REFERENCES [dbo].[dogadjaj] ([ID_dogadjaj]);


GO
PRINT N'Creating Foreign Key on [dbo].[korisnik_dogadjaj]....';


GO
ALTER TABLE [dbo].[korisnik_dogadjaj]
    ADD FOREIGN KEY ([ID_korisnik]) REFERENCES [dbo].[korisnik] ([ID_korisnik]);


GO
PRINT N'Creating Foreign Key on [dbo].[korisnik]....';


GO
ALTER TABLE [dbo].[korisnik]
    ADD FOREIGN KEY ([ID_korisnikTip]) REFERENCES [dbo].[korisnikTip] ([ID_korisnikTip]);


GO
PRINT N'Creating Foreign Key on [dbo].[pitanja]....';


GO
ALTER TABLE [dbo].[pitanja]
    ADD FOREIGN KEY ([ID_cjelina]) REFERENCES [dbo].[cjelina] ([ID_cjelina]);


GO
PRINT N'Creating Foreign Key on [dbo].[grupa]....';


GO
ALTER TABLE [dbo].[grupa]
    ADD FOREIGN KEY ([ID_cjelina]) REFERENCES [dbo].[cjelina] ([ID_cjelina]);


GO
PRINT N'Creating Foreign Key on [dbo].[materijal]....';


GO
ALTER TABLE [dbo].[materijal]
    ADD FOREIGN KEY ([ID_cjelina]) REFERENCES [dbo].[cjelina] ([ID_cjelina]);


GO
PRINT N'Creating Foreign Key on [dbo].[cjelina]....';


GO
ALTER TABLE [dbo].[cjelina]
    ADD FOREIGN KEY ([ID_predmet]) REFERENCES [dbo].[predmet] ([ID_predmet]);


GO
PRINT N'Creating Foreign Key on [dbo].[korisnik_ispit]....';


GO
ALTER TABLE [dbo].[korisnik_ispit]
    ADD FOREIGN KEY ([ID_korisnik]) REFERENCES [dbo].[korisnik] ([ID_korisnik]);


GO
PRINT N'Creating Foreign Key on [dbo].[korisnik_ispit]....';


GO
ALTER TABLE [dbo].[korisnik_ispit]
    ADD FOREIGN KEY ([ID_ispit]) REFERENCES [dbo].[ispit] ([ID_ispit]);


GO
PRINT N'Creating Foreign Key on [dbo].[odgovor]....';


GO
ALTER TABLE [dbo].[odgovor]
    ADD FOREIGN KEY ([ID_pitanja]) REFERENCES [dbo].[pitanja] ([ID_pitanja]);


GO
PRINT N'Creating Foreign Key on [dbo].[odgovor_ispit]....';


GO
ALTER TABLE [dbo].[odgovor_ispit]
    ADD FOREIGN KEY ([ID_odgovor]) REFERENCES [dbo].[odgovor] ([ID_odgovor]);


GO
PRINT N'Creating Foreign Key on [dbo].[odgovor_ispit]....';


GO
ALTER TABLE [dbo].[odgovor_ispit]
    ADD FOREIGN KEY ([ID_korisnik_ispit]) REFERENCES [dbo].[korisnik_ispit] ([ID_korisnik_ispit]);


GO
PRINT N'Creating Foreign Key on [dbo].[dogadjaj]....';


GO
ALTER TABLE [dbo].[dogadjaj]
    ADD FOREIGN KEY ([kreirao]) REFERENCES [dbo].[korisnik] ([ID_korisnik]);


GO
PRINT N'Creating [dbo].[autoskola]...';


GO
CREATE VIEW [dbo].[autoskola]
	AS SELECT * FROM [dbo].[korisnik];
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c00a0a2c-6c4d-4d02-a1f7-130563d9d7ba')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c00a0a2c-6c4d-4d02-a1f7-130563d9d7ba')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c6ed7e46-dc3f-42ff-bb2e-46f28015be7e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c6ed7e46-dc3f-42ff-bb2e-46f28015be7e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e49d63ce-3cb0-4924-b78d-5537b0141312')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e49d63ce-3cb0-4924-b78d-5537b0141312')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fd013941-24ba-414d-85f9-c9e5207bfd67')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fd013941-24ba-414d-85f9-c9e5207bfd67')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5ccda897-cad0-4f6a-aa9e-54c68f74d15d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5ccda897-cad0-4f6a-aa9e-54c68f74d15d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c1fefa4c-3ba0-4755-b256-b29979b7b61a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c1fefa4c-3ba0-4755-b256-b29979b7b61a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c356e1b8-62f7-46b9-9a4b-f582db0221ce')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c356e1b8-62f7-46b9-9a4b-f582db0221ce')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fff9c016-baac-4e6d-aeee-cae0cfdd7d68')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fff9c016-baac-4e6d-aeee-cae0cfdd7d68')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cb13e135-50b5-41fb-b6e1-c81e0cb37c18')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cb13e135-50b5-41fb-b6e1-c81e0cb37c18')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ffc9bfe6-dc3f-4e1b-9cc4-4af976a3d163')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ffc9bfe6-dc3f-4e1b-9cc4-4af976a3d163')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6869d810-40d5-4a86-833e-96189a1525f2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6869d810-40d5-4a86-833e-96189a1525f2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fd872f05-0e0d-4cf7-a218-247b5829df0a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fd872f05-0e0d-4cf7-a218-247b5829df0a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1a4c69be-af0c-4fd8-9e44-d7b843934a16')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1a4c69be-af0c-4fd8-9e44-d7b843934a16')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c0fc9f97-b104-45a6-be07-871337a24aab')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c0fc9f97-b104-45a6-be07-871337a24aab')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b3afe354-b3c8-4559-9e73-a0cc38d5fb15')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b3afe354-b3c8-4559-9e73-a0cc38d5fb15')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '19529a64-46db-4fd1-89b4-0dce3eedf8f9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('19529a64-46db-4fd1-89b4-0dce3eedf8f9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0a103ef6-4a0a-4310-bba1-c3547526a0f6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0a103ef6-4a0a-4310-bba1-c3547526a0f6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b79c417e-ce5b-4eae-b713-94f8241a548e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b79c417e-ce5b-4eae-b713-94f8241a548e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8b1b3628-b38c-4fe5-baa9-0a875cbc1652')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8b1b3628-b38c-4fe5-baa9-0a875cbc1652')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2edc1c3d-b20b-4714-b24a-48add1270ed3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2edc1c3d-b20b-4714-b24a-48add1270ed3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c5dcd414-c000-4bd2-b3e6-9594d1e8cc16')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c5dcd414-c000-4bd2-b3e6-9594d1e8cc16')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7a27591f-9190-4008-895d-74f956b651e8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7a27591f-9190-4008-895d-74f956b651e8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'df4d61bc-48eb-47b6-8c98-725670f177f4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('df4d61bc-48eb-47b6-8c98-725670f177f4')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET MULTI_USER 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Update complete.'
GO
