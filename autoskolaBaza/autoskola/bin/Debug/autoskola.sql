/*
Deployment script for autoskola

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "autoskola"
:setvar DefaultFilePrefix "autoskola"
:setvar DefaultDataPath "C:\Users\bero\AppData\Local\Microsoft\VisualStudio\SSDT\v11.0\autoskola\"
:setvar DefaultLogPath "C:\Users\bero\AppData\Local\Microsoft\VisualStudio\SSDT\v11.0\autoskola\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'The following operation was generated from a refactoring log file 7a27591f-9190-4008-895d-74f956b651e8';

PRINT N'Rename [dbo].[korisnik].[ID_korisnik_tip] to ID_korisnikTip';


GO
EXECUTE sp_rename @objname = N'[dbo].[korisnik].[ID_korisnik_tip]', @newname = N'ID_korisnikTip', @objtype = N'COLUMN';


GO
PRINT N'Rename refactoring operation with key df4d61bc-48eb-47b6-8c98-725670f177f4 is skipped, element [dbo].[korisnikTip].[IDkorisnikTip] (SqlSimpleColumn) will not be renamed to ID_korisnikTip';


GO
PRINT N'Starting rebuilding table [dbo].[korisnik]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_korisnik] (
    [ID_korisnik]    INT          NOT NULL,
    [ime]            VARCHAR (30) NOT NULL,
    [prezime]        VARCHAR (30) NOT NULL,
    [korisnicko_ime] VARCHAR (30) NOT NULL,
    [lozinka]        VARCHAR (30) NOT NULL,
    [oib]            VARCHAR (30) NOT NULL,
    [mail]           VARCHAR (30) NULL,
    [telefon]        VARCHAR (30) NULL,
    [ID_korisnikTip] INT          NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_ID_korisnik] PRIMARY KEY CLUSTERED ([ID_korisnik] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[korisnik])
    BEGIN
        
        INSERT INTO [dbo].[tmp_ms_xx_korisnik] ([ID_korisnik], [ime], [prezime], [korisnicko_ime], [lozinka], [oib], [mail], [telefon], [ID_korisnikTip])
        SELECT   [ID_korisnik],
                 [ime],
                 [prezime],
                 [korisnicko_ime],
                 [lozinka],
                 [oib],
                 [mail],
                 [telefon],
                 [ID_korisnikTip]
        FROM     [dbo].[korisnik]
        ORDER BY [ID_korisnik] ASC;
        
    END

DROP TABLE [dbo].[korisnik];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_korisnik]', N'korisnik';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_ID_korisnik]', N'ID_korisnik', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[korisnikTip]...';


GO
CREATE TABLE [dbo].[korisnikTip] (
    [ID_korisnikTip] INT          NOT NULL,
    [naziv]          VARCHAR (30) NOT NULL,
    PRIMARY KEY CLUSTERED ([ID_korisnikTip] ASC)
);


GO
PRINT N'Creating [dbo].[predmet]...';


GO
CREATE TABLE [dbo].[predmet] (
    [ID_predmet] INT           NOT NULL,
    [naziv]      VARCHAR (30)  NOT NULL,
    [opis]       VARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([ID_predmet] ASC)
);


GO
PRINT N'Creating Foreign Key on [dbo].[korisnik]....';


GO
ALTER TABLE [dbo].[korisnik] WITH NOCHECK
    ADD FOREIGN KEY ([ID_korisnikTip]) REFERENCES [dbo].[korisnikTip] ([ID_korisnikTip]);


GO
PRINT N'Creating Foreign Key on [dbo].[cjelina]....';


GO
ALTER TABLE [dbo].[cjelina] WITH NOCHECK
    ADD FOREIGN KEY ([ID_predmet]) REFERENCES [dbo].[predmet] ([ID_predmet]);


GO
PRINT N'Creating Foreign Key on [dbo].[grupa]....';


GO
ALTER TABLE [dbo].[grupa] WITH NOCHECK
    ADD FOREIGN KEY ([ID_cjelina]) REFERENCES [dbo].[cjelina] ([ID_cjelina]);


GO
PRINT N'Creating Foreign Key on [dbo].[ispit]....';


GO
ALTER TABLE [dbo].[ispit] WITH NOCHECK
    ADD FOREIGN KEY ([ID_grupa]) REFERENCES [dbo].[grupa] ([ID_grupa]);


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7a27591f-9190-4008-895d-74f956b651e8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7a27591f-9190-4008-895d-74f956b651e8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'df4d61bc-48eb-47b6-8c98-725670f177f4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('df4d61bc-48eb-47b6-8c98-725670f177f4')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;


GO
DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.korisnik'), OBJECT_ID(N'dbo.cjelina'), OBJECT_ID(N'dbo.grupa'), OBJECT_ID(N'dbo.ispit'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint:' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occured while verifying constraints', 16, 127);
    END


GO
SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.'
GO
